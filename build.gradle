import com.sun.org.apache.xalan.internal.xsltc.cmdline.Compile

buildscript {
    ext.kotlin_version = '1.0.3'

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version" // Kotlin Build Script
    }
}

// ========================= The basics ========================= //

group = 'io.puharesource.mc'
version = '2.0.0'

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'kotlin'

sourceCompatibility = 1.8
targetCompatibility = 1.8

// Manifest
jar {
    manifest.attributes provider: 'gradle'
}

// Force UTF-8
tasks.withType(Compile) {
    options.encoding = 'UTF-8'
}

// ========================= Resource Filtering ========================= //

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.yml'
        filter(org.apache.tools.ant.filters.ReplaceTokens, tokens: [VERSION: project.version])
    }
}

// ========================= Clean extension ========================= //
// Removes the folder out/ which is would have otherwise been left in
// the root directory, if it wasn't for this method.

clean.doFirst {
    delete "$rootDir/out/"
}

// ========================= Custom compilation task ========================= //
// Bundles all of the compiled jars into a nice and sane directory. (/out/)

tasks.withType(Jar) {
    destinationDir = file("$rootDir/out/")
}

// ========================= Provided scope ========================= //
// The provided scope, allows the developer to choose which dependencies
// will be shaded into the jar file. Provided tells the compiler that the
// dependency is provided at runtime and should therefor not be compiled
// while compile tells the compiler that it is needed right here and now
// and should therefor be compiled into the jar.

configurations {
    provided
    compile.extendsFrom provided
}

artifacts {
    archives jar
}

jar {
    dependsOn configurations.runtime
    from {
        (configurations.runtime - configurations.provided).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
}

// ========================= Repositories ========================= //

repositories {
    mavenCentral()

    maven {
        name 'Spigot'
        url 'https://hub.spigotmc.org/nexus/content/groups/public/'
    }

    maven {
        name 'BungeeCord'
        url 'https://oss.sonatype.org/content/repositories/snapshots'
    }

    maven {
        name 'Vault'
        url 'http://nexus.hc.to/content/repositories/pub_releases'
    }

    maven {
        name 'ess-repo'
        url 'http://repo.ess3.net/content/groups/essentials'
    }

    maven {
        name 'kitteh-repo'
        url 'http://repo.kitteh.org/content/groups/public'
    }

    maven {
        name 'placeholderapi'
        url 'http://repo.extendedclip.com/content/repositories/placeholderapi/'
    }

    flatDir {
        dirs "$rootDir/libs/"
    }
}

// ========================= Dependencies ========================= //

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile group: 'io.reactivex', name: 'rxjava', version: '1.2.1'

    provided group: 'org.spigotmc', name: 'spigot-api', version: '1.11-R0.1-SNAPSHOT'

    provided group: 'me.clip', name: 'placeholderapi', version: '2.0.8'
    provided group: 'net.milkbowl.vault', name: 'VaultAPI', version: '1.5'
    provided group: 'net.ess3', name: 'Essentials', version: 'Pre2.14.1.3'
    provided group: 'org.kitteh', name: 'VanishNoPacket', version: '3.19.2-SNAPSHOT'

    provided name: 'SuperVanish'
}